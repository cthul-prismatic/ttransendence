#nop Functionaility for autonomous bashing;

#var ReverseDir {
   {n} {s}
   {e} {w}
   {s} {n}
   {w} {e}

   {ne} {sw}
   {nw} {se}
   {se} {nw}
   {sw} {ne}

   {up} {down}
   {down} {up}

   {in} {out}
   {out} {in}
}

#var RecordedPath { };
#var ReturnPath { };

/** 
   Raised after successfully moving to a new location
   Teleporting clears the stack
*/
deregisterEvent recordPath;
registerEvent recordPath;
#alias {recordPath} {
   #nop AttemptedDir comes from MoveCommands.tt and mapping.tt;
   #if {&AttemptedDir} {
      #list RecordedPath ins +1 $AttemptedDir;
      #nop dbg Recorded: $RecordedPath, came in $AttemptedDir;
   };
};

/**
   Clear the stack from teleporting
*/
deregisterEvent clearPath;
registerEvent clearPath;
#alias {clearPath} {
   #list RecordedPath clear;
};

#var AutoBashStrat {
   autobash.hunt;
}

#alias autobash.hunt {
   #nop If health is too low, get out of there.;
   #local hp @getHpPercent{};
   #if {$hp < 0.95} {
      autobash.switchToretreat;
      #return;
   };

   atk;

   #if {&{atkTarget} == 0 } {
      #if {$hp > 0.85} {
         registerEvent finishAutoHarvest continueFromHarvest;
         autoharvest;
         #return;
      };
      #else {
         autobash.switchToheal;
         #return;
      };
   };
}

#alias autobash.switchToheal {
   print Switching to Heal;

   #class autobash clear; 
   deregisterEvent explore $AutoBashStrat;
   #var AutoBashStrat {autobash.heal};
   registerEvent heal $AutoBashStrat;
   #class autobashHeal load;
}

#alias autobash.heal {
   info Checking Heatlh...;

   #nop CURING SIPHEALTH;
   #local hp @getHpPercent{};
   #if {$hp > 0.85} {
      info Health is in a good state, move on.;
      deregisterEvent heal;
      #class autobashHeal clear;

      #class autobash load; 
      #var AutoBashStrat {autobash.hunt};
      registerEvent explore $AutoBashStrat;
      $AutoBashStrat;
   };

   #else {
      print Healing...;
   }
}

#alias autobash.switchToretreat {

   #class autobash clear; 
   deregisterEvent explore;

   print Switching to Retreat;
   #send {CLEARQUEUE ALL};

   #var AutoBashStrat {autobash.retreat};
   registerEvent heal autobash.retreat;
   #class autobashHeal load;

   autobash.retreat;
   registerEvent enteredNewRoom allowRetreat;
}

#var AllowRetreat 1;
#alias allowRetreat {#var AllowRetreat 1};

#alias autobash.retreat {
   #if {&{roomMobs[]} > 0 && $AllowRetreat == 1} {
      print Retreating!;
      #var AllowRetreat 0;

      #nop Back out to previous room;
      #nop In lower level places, this is enough;
      #nop But in higher level areas the mobs will follow and we need to run more.;
      #var next $RecordedPath[+1];
      #list RecordedPath delete +1;
      #list ReturnPath ins +1 $next;

      #var dir $ReverseDir[$next];
      move $dir; 
      #return;
   };

   #local hp @getHpPercent{};
   #if {$hp > 0.95} {
      info Health is better, now return to the fight!;
      deregisterEvent heal autobash.retreat;
      deregisterEvent enteredNewRoom;

      #nop #class autobash load; 
      #nop #var AutoBashStrat {autobash.hunt};
      #nop registerEvent explore autobash.hunt;
      #nop #class autobashHeal clear;
#nop; 
      #nop #var next $ReturnPath[+1];
      #nop #list RecordedPath delete +1;
      #nop #list ReturnPath ins +1 $next;
#nop; 
      #nop #var dir $ReverseDir[$next];
      #nop move $dir; 
   };
}

#function {getHpPercent} {
   #var hp $gmcp[char][vitals][hp];
   #math hp {$hp * 1.0};
   #var maxhp $gmcp[char][vitals][maxhp];
   #math maxhp {$maxhp * 1.0};
   #math hpPercent {$hp/$maxhp};
   #return $hpPercent;
}

#class autobashHeal kill;
#class autobashHeal open;
#action {You may drink another health or mana elixir.} {
   raiseEvent heal;
}
#class autobashHeal close;
#class autobashHeal save;
#class autobashHeal clear;


